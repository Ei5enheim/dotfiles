# tmux pop windown sizing options
# -w 62% -h 38%

# search history
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward

# Ctrl-t to find a file/directory
# Ctrl-r to find a command in history
# Alt-C to cd into a selected directory

# fzf settings
export FZF_TMUX_OPTS='-p90%,80%'
export FZF_DEFAULT_OPTS='--no-reverse --info=inline'

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Preview file content using bat (https://github.com/sharkdp/bat)
export FZF_CTRL_T_OPTS="
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS="
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"

gco() {
  _fzf_git_each_ref --no-multi | xargs git checkout
}

tab() { open -a "Google Chrome" $1; }

tkill() { tmux kill-session -t $1; }

# exit update to prevent killing of a session when there are less
# than 1 window.
function exit {
  if [[ -n "${TMUX}" ]]; then
    window_count=$(tmux list-windows | wc -l)
    # if there are more than 1 windows in a session then kill the window. 
    if (( $window_count < 2 )); then
      tmux detach
    else
      tmux kill-window
    fi
  else 
    builtin exit
  fi
}

# cda - including hidden directories
cda() {
  local dir
  dir=$(fd ${1:-.} --type d 2> /dev/null | fzf-tmux -p -w 90% -h 80% +m) && cd "$dir"
}

# usage
# fif -g '!*.zsh' -g '!*.java' -a bat
# find in files.
# parse glob option
# -g option to specify file filter
# -a option to specify the app to open the file with
fif() {
    local file_type_opts=""
    local app="vim"
    RG_DEFAULT_COMMAND="rg -i -l --hidden --no-ignore-vcs"

    while [[ $# -gt 0 ]]; do
      case $1 in
        -g)
          shift
          file_type_opts+=" -g '"
          file_type_opts+="$1"
          file_type_opts+="'"
          ;;
        -a)
          shift
          app="$1"
          ;;
        *)
          break
          ;;
      esac
      shift
    done

    command="rg -l"
    # append file type options to rg command.
    if [[ -n "$file_type_opts" ]]; then
      command+="$file_type_opts"
    fi

    # append -e to command so on reload string search works.
    command+=" -e "
    # set the default search string to empty string.
    default_rg_command="${command} ''"
    selected=$(FZF_DEFAULT_COMMAND=${default_rg_command} fzf-tmux \
      -p \
      -w 90% \
      -h 80% \
      -m \
      --ansi \
      --disabled \
      --bind "ctrl-a:select-all" \
      --bind "f12:execute-silent:($app {})" \
      --bind "change:reload:$command {q} || true" \
      --bind "alt-j:preview-down" \
      --bind "alt-k:preview-up" \
      --bind "alt-g:preview-bottom" \
      --bind "alt-t:preview-top" \
      --preview "rg -i --pretty --context 2 {q} {}" | cut -d":" -f1,2
    )

    echo "selected files: $selected"
    [[ -n $selected ]] && $app $selected # open multiple files in editor
}
