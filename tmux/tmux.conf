# remap prefix from 'C-b' to 'C-a'
unbind C-b
unbind C-a
set-option -g prefix C-Space
bind C-Space send-prefix
# window config
bind t new-window -c "#{pane_current_path}"
unbind c
bind k unlink-window -k
unbind &
bind a last-window
# use numbers 0-9 to switch windows
# pane config
bind h split-window -v -c "#{pane_current_path}"
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
unbind %
bind c kill-pane
unbind x

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# clear screen key binding
bind C-l send-keys 'C-l'

# send sig quit to foreground process
bind C-\\ send-keys 'C-\'

# Increase scrollback buffer size from 2000 to 50000 lines
set-option -g history-limit 5000

# set window and pane index to start from 1
set -g base-index 1
setw -g pane-base-index 1

# move the windows so that there are no gaps
set -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename on

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 1

# Upgrade $TERM
set -g default-terminal "screen-256color"

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# hey tmux! use the system clipboard.
# this will work if you're using mvim from within the terminal
# set-option -g default-command "reattach-to-user-namespace -l bash"

#return to marked pane
bind \` switch-client -t'{marked}'

# reload source file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# reload message style
set -g message-style 'fg=colour2 bg=colour0 bold'

# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#
# better colors for selected regions
# set -g mode-style 'bg=#A7C7E7,fg=black'
# copy mode
set -g mode-style 'bg=#c1dfff,fg=black'
# clock mode
setw -g clock-mode-colour colour1

# setw -g mode-style 'fg=colour1 bg=colour18 bold'

# pane borders
set -g pane-border-style 'fg=colour1'
set -g pane-active-border-style 'fg=colour3'
set -g pane-border-lines heavy

# act like vim in copy mode
setw -g mode-keys vi

# enter copy mode
unbind s
bind s copy-mode
unbind [

# make v to start highlight in copy-mode (same as visual mode in Vi)
# make y to copy highlighted text
# make p to paste selected text
# -T option to specify the key table
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind p paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


# switch panes
# smart pane switching with awareness of vim splits
# makes ctrl-j and ctrl-k navigate fzf search results when fzf active in pane
# providing the same behavior as ctrl-j and ctrl-k when navigating ctrl-p results
# inside vim.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ 
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'dracula/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'ofirgall/tmux-window-name'
# set -g @plugin 'olimorris/tmux-pomodoro-plus'
# set -g @plugin 'erikw/tmux-powerline'
# set -g @plugin 'noscript/tmux-mighty-scroll'

#window-name settings
# Shell programs, will show dir instead of the program
set -g @tmux_window_name_shells "['bash', 'fish', 'sh', 'zsh']"
# Programs that will show the dir name too.
set -g @tmux_window_dir_programs "['nvim', 'vim', 'vi', 'git']"
# Programs that will be skipped/ignored when looking for active program.
set -g @tmux_window_name_ignored_programs "['sqlite3']" # Default is []
set -g @tmux_window_name_max_name_len "20"
set -g @tmux_window_name_use_tilde "True"
# Enable debug logs
set -g @tmux_window_name_log_level "'DEBUG'"

set -g status-position top

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

## default statusbar colors from
# https://github.com/keeganlow/dotfiles/blob/master/.tmux.conf
#
## pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
#
## clock
set-window-option -g clock-mode-colour colour43 #green

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# make iterm window/tab name reflect tmux session
set-option -g set-titles on
set-option -g set-titles-string '#S'

# This tmux statusbar config was created by tmuxline.vim: on Wed, 12 Oct 2016
# and then customized by @keeganlow
set -g status-bg "colour67"
set -g status-justify "left"
set -g status-left-length "200"
set -g status "on"
set -g status-right-length "100"
# original gold color bg is 144.
set -g status-left "#[fg=colour232,bg=colour173] #S #[fg=colour0,bg=colour67,nobold,nounderscore,noitalics]î‚° #[fg=colour0,bg=colour67]î‚  #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD) #[fg=colour0,bg=colour224,nobold,nounderscore,noitalics]"


# indicate whether Prefix has been captured + time in the right-status area
set -g status-right '#[fg=colour144,bg=colour67,nobold,nounderscore,noitalics]î‚²#[fg=colour232,bg=colour144]#{?client_prefix,ðŸš€ ðŸš€ ðŸš€,} %H:%M '
setw -g window-status-format "#[fg=colour253,bg=colour67] #I)#[fg=colour253,bg=colour67] #W #[fg=colour204,bg=colour67,nobold,nounderscore,noitalics]î‚±" #î‚°"
setw -g window-status-current-format "#[fg=colour253,bg=colour16] #I)#[fg=colour253,bg=colour16] #W #[fg=colour16,bg=colour67,nobold,nounderscore,noitalics]î‚°"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
